{
	"compiler": {
		"version": "0.7.4+commit.3f05b770"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "_uri",
						"type": "string"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					}
				],
				"name": "URI",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "bytes4",
						"name": "_interfaceID",
						"type": "bytes4"
					}
				],
				"name": "supportsInterface",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					}
				],
				"name": "uri",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "Methods assume a deterministic generation of URI based on token IDs.      Methods also assume that URI uses hex representation of token IDs.",
			"kind": "dev",
			"methods": {
				"supportsInterface(bytes4)": {
					"params": {
						"_interfaceID": "The interface identifier, as specified in ERC-165"
					},
					"returns": {
						"_0": "`true` if the contract implements `_interfaceID` and"
					}
				},
				"uri(uint256)": {
					"details": "URIs are defined in RFC 3986.      URIs are assumed to be deterministically generated based on token ID",
					"returns": {
						"_0": "URI string"
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"supportsInterface(bytes4)": {
					"notice": "Query if a contract implements an interface"
				},
				"uri(uint256)": {
					"notice": "A distinct Uniform Resource Identifier (URI) for a given token."
				}
			},
			"notice": "Contract that handles metadata related methods.",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"localhost/multi-token-standard/tokens/ERC1155/ERC1155Metadata.sol": "ERC1155Metadata"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"localhost/multi-token-standard/interfaces/IERC1155Metadata.sol": {
			"keccak256": "0xd85133dcdb2078392fa9602a72a9ecccbc6ccad621c4772d2068941e3dac9302",
			"urls": [
				"bzz-raw://2e72fb4ff7be4745decc2f8b92c1f2bbc89eb67c698817caf4dfc2eb6ee88989",
				"dweb:/ipfs/QmQS7uvpJHGjJ1r7vZq4Re4oARdhj1YZyGqciHozrCxeRe"
			]
		},
		"localhost/multi-token-standard/tokens/ERC1155/ERC1155Metadata.sol": {
			"keccak256": "0xdea5eed5c299b0ee08886409ad46b066f781115b86808e3f20e2aba11093f430",
			"urls": [
				"bzz-raw://2f7799fa2dd9c1477baaec2de6b979bf0be7889c10ee4ad262769e0f96340efa",
				"dweb:/ipfs/Qmah8QpkdMAoH5yLBUZHrHDmXw93LKX4vmfku9DyTShgHV"
			]
		},
		"localhost/multi-token-standard/utils/ERC165.sol": {
			"keccak256": "0x1564f787cc3c130564aade3732f0c4a8df48958f388638b484ee951ef6357200",
			"urls": [
				"bzz-raw://bd0854514ee49f247c6f5c3b092c84076f3e6ff8129c8f3d0d282855c97515fd",
				"dweb:/ipfs/QmesWuf6Lbtgyq3KAJER3iBxoy3LLvwiX119ktRoCmNu8s"
			]
		}
	},
	"version": 1
}