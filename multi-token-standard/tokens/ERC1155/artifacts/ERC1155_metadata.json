{
	"compiler": {
		"version": "0.7.4+commit.3f05b770"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "_operator",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "_approved",
						"type": "bool"
					}
				],
				"name": "ApprovalForAll",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_operator",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "_from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "_to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256[]",
						"name": "_ids",
						"type": "uint256[]"
					},
					{
						"indexed": false,
						"internalType": "uint256[]",
						"name": "_amounts",
						"type": "uint256[]"
					}
				],
				"name": "TransferBatch",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_operator",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "_from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "_to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "TransferSingle",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_owner",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "_owners",
						"type": "address[]"
					},
					{
						"internalType": "uint256[]",
						"name": "_ids",
						"type": "uint256[]"
					}
				],
				"name": "balanceOfBatch",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "",
						"type": "uint256[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_owner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_operator",
						"type": "address"
					}
				],
				"name": "isApprovedForAll",
				"outputs": [
					{
						"internalType": "bool",
						"name": "isOperator",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_to",
						"type": "address"
					},
					{
						"internalType": "uint256[]",
						"name": "_ids",
						"type": "uint256[]"
					},
					{
						"internalType": "uint256[]",
						"name": "_amounts",
						"type": "uint256[]"
					},
					{
						"internalType": "bytes",
						"name": "_data",
						"type": "bytes"
					}
				],
				"name": "safeBatchTransferFrom",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "_data",
						"type": "bytes"
					}
				],
				"name": "safeTransferFrom",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_operator",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "_approved",
						"type": "bool"
					}
				],
				"name": "setApprovalForAll",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes4",
						"name": "_interfaceID",
						"type": "bytes4"
					}
				],
				"name": "supportsInterface",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "Implementation of Multi-Token Standard contract",
			"kind": "dev",
			"methods": {
				"balanceOf(address,uint256)": {
					"params": {
						"_id": "ID of the Token",
						"_owner": "The address of the token holder"
					},
					"returns": {
						"_0": "The _owner's balance of the Token type requested"
					}
				},
				"balanceOfBatch(address[],uint256[])": {
					"params": {
						"_ids": "ID of the Tokens",
						"_owners": "The addresses of the token holders"
					},
					"returns": {
						"_0": "The _owner's balance of the Token types requested (i.e. balance for each (owner, id) pair)"
					}
				},
				"isApprovedForAll(address,address)": {
					"params": {
						"_operator": "Address of authorized operator",
						"_owner": "The owner of the Tokens"
					},
					"returns": {
						"isOperator": "True if the operator is approved, false if not"
					}
				},
				"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
					"params": {
						"_amounts": "Transfer amounts per token type",
						"_data": "Additional data with no specified format, sent in call to `_to`",
						"_from": "Source addresses",
						"_ids": "IDs of each token type",
						"_to": "Target addresses"
					}
				},
				"safeTransferFrom(address,address,uint256,uint256,bytes)": {
					"params": {
						"_amount": "Transfered amount",
						"_data": "Additional data with no specified format, sent in call to `_to`",
						"_from": "Source address",
						"_id": "ID of the token type",
						"_to": "Target address"
					}
				},
				"setApprovalForAll(address,bool)": {
					"params": {
						"_approved": "True if the operator is approved, false to revoke approval",
						"_operator": "Address to add to the set of authorized operators"
					}
				},
				"supportsInterface(bytes4)": {
					"params": {
						"_interfaceID": "The interface identifier, as specified in ERC-165"
					},
					"returns": {
						"_0": "`true` if the contract implements `_interfaceID` and"
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"balanceOf(address,uint256)": {
					"notice": "Get the balance of an account's Tokens"
				},
				"balanceOfBatch(address[],uint256[])": {
					"notice": "Get the balance of multiple account/token pairs"
				},
				"isApprovedForAll(address,address)": {
					"notice": "Queries the approval status of an operator for a given owner"
				},
				"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
					"notice": "Send multiple types of Tokens from the _from address to the _to address (with safety call)"
				},
				"safeTransferFrom(address,address,uint256,uint256,bytes)": {
					"notice": "Transfers amount amount of an _id from the _from address to the _to address specified"
				},
				"setApprovalForAll(address,bool)": {
					"notice": "Enable or disable approval for a third party (\"operator\") to manage all of caller's tokens"
				},
				"supportsInterface(bytes4)": {
					"notice": "Query if a contract implements an interface"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"localhost/multi-token-standard/tokens/ERC1155/ERC1155.sol": "ERC1155"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"localhost/multi-token-standard/interfaces/IERC1155.sol": {
			"keccak256": "0x2b798f05c3fb672db6d384cb0c0d5a0fb99913cea30e8f9fed6cb6b1dc93ef41",
			"urls": [
				"bzz-raw://4c605b956be9fdb02c20459ec360c1e8d471b07f731cb9cb99d17042b6663d14",
				"dweb:/ipfs/QmaWh9gKJAUcSpkNixfWj2ur2AoTe4isyUY9DgLVCVnATy"
			]
		},
		"localhost/multi-token-standard/interfaces/IERC1155TokenReceiver.sol": {
			"keccak256": "0x8137f63c34fd6549a797b459d1f0c17aa38c310460ddddcff584a975af57e5f5",
			"urls": [
				"bzz-raw://cc1f656d30106e84c8b7469a01405346094ce220b467a3ae94c527fcc3a512a2",
				"dweb:/ipfs/QmbxopG3mkCeofHs567SKzFFCqHYhfmfGHmJHeUHMAuUH3"
			]
		},
		"localhost/multi-token-standard/tokens/ERC1155/ERC1155.sol": {
			"keccak256": "0x0635a4ffb9ed2a16efc2390f83b96cb5a28753e03e3a09c31b17bbc5b111e317",
			"urls": [
				"bzz-raw://60b2035d3fdde619b3de76496c98e03ba35da5ebfa90320561b91d6aee7db974",
				"dweb:/ipfs/QmP4GKkgPsHFCjW23uDoA9nwxyNCj6ray2QaF3xCTCgmsa"
			]
		},
		"localhost/multi-token-standard/utils/Address.sol": {
			"keccak256": "0x17d4e3dab0ec1b2e18c62a9420c34d62db88e2890adf818b89fbe1f595e9b7ba",
			"urls": [
				"bzz-raw://e70d8280037b6eb7c4802b3995fb01d9a6fd6a83b28802f7a0fa62a639653db4",
				"dweb:/ipfs/QmfTWubjTofs4ANcv6evmChhH9G3kQC9W9y8VaSdTEPsi9"
			]
		},
		"localhost/multi-token-standard/utils/ERC165.sol": {
			"keccak256": "0x1564f787cc3c130564aade3732f0c4a8df48958f388638b484ee951ef6357200",
			"urls": [
				"bzz-raw://bd0854514ee49f247c6f5c3b092c84076f3e6ff8129c8f3d0d282855c97515fd",
				"dweb:/ipfs/QmesWuf6Lbtgyq3KAJER3iBxoy3LLvwiX119ktRoCmNu8s"
			]
		},
		"localhost/multi-token-standard/utils/SafeMath.sol": {
			"keccak256": "0xd1516750c40e5d397489d0a2cbbdc59bd22756b80a0f2e8095103978c3bc0637",
			"urls": [
				"bzz-raw://233a5cbbd62a82a243a3a091293f3ffd8e3d9ee9d808cd2ae5b392f55dfe1383",
				"dweb:/ipfs/QmREXmxdEvvn7VwhrNVvGpy8fUqssEJxczdYJtqms9mif7"
			]
		}
	},
	"version": 1
}